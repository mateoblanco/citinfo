{"version":3,"sources":["components/City.js","components/ListCities.js","components/SearchAutoComplete.js","components/Search.js","components/Home.js","components/Header.js","components/Navegation.js","components/InfoCity.js","components/SeeAnDo.js","components/Map.js","components/Footer.js","components/Activities.js","components/Weather.js","components/SingleCity.js","components/Router.js","components/App.js","index.js"],"names":["City","liStyle","_this","props","informacion","images","backgroundImage","sizes","medium","url","background","react_default","a","createElement","style","this","Link","to","concat","country_id","id","name","Component","ListCities","Fragment","className","Object","keys","cities","map","city","components_City","key","SearchAutoComplete","hide","hideSearch","showResult","result","length","onClick","Search","terminoRef","React","createRef","searchCity","termino","current","value","onChange","ref","type","placeholder","components_SearchAutoComplete","autoComplete","Home","components_Search","components_ListCities","Header","showSearch","document","querySelector","classList","add","remove","width","height","viewBox","version","xmlns","d","Navegation","modules","activeClass","spy","smooth","offset","duration","InfoCity","fixCountryId","countryId","parts","split","newCountryId","forEach","element","showImage","info","src","original","alt","caption","showContent","undefined","content","title","intro","SeeAndDo","divStyle","poi","pointsOfInterest","_this2","Map","ReactMapboxGl","accessToken","MapComponent","_this$props$coordinat","coordinates","latitude","longitude","center","zoom","containerStyle","Footer","Activities","activities","activity","snippet","Weather","convertDate","date","month","weather","day","condition","icon","avgtemp_c","toFixed","SingleCity","apiToken","autentication","state","nearbyCities","stateChanges","getData","getCity","getActivities","getPointsOfInterest","getNearbyCities","_callee","headers","regenerator_default","wrap","_context","prev","next","X-Triposo-Account","X-Triposo-Token","axios","get","then","respuesta","setState","data","results","getWeather","catch","error","console","log","stop","_callee2","_context2","_callee3","_context3","_callee4","cityId","_context4","_callee5","_context5","Accept","Content-Type","forecast","components_Header","components_Navegation","components_InfoCity","SeeAnDo","components_Activities","components_Map","components_Weather","forecastday","components_Footer","emptyAutoComplete","nextProps","location","pathname","scroll","scrollToTop","Router","searchCities","popularCities","getPopularCities","HashRouter","Switch","Route","exact","path","render","components_Home","infoCity","components_SingleCity","App","components_Router","ReactDOM","components_App","getElementById"],"mappings":"kTAmCeA,6MA9BXC,QAAU,WAEN,OAAGC,EAAKC,MAAMC,YAAYC,OAAO,GAE7B,CACIC,gBAAiB,OAASJ,EAAKC,MAAMC,YAAYC,OAAO,GAAGE,MAAMC,OAAOC,IAAM,KAK9E,CACIC,WAAY,iFAQxB,OACIC,EAAAC,EAAAC,cAAA,MAAIC,MAAQC,KAAKd,WACbU,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAE,SAAAC,OAAWH,KAAKZ,MAAMC,YAAYe,WAAlC,KAAAD,OAAgDH,KAAKZ,MAAMC,YAAYgB,MAE/ET,EAAAC,EAAAC,cAAA,UAAKE,KAAKZ,MAAMC,YAAYiB,cAxBzBC,aCsBJC,mLArBF,IAAArB,EAAAa,KAEL,OACIJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMY,SAAP,KACIb,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBAAiBL,GAAG,UAC/BT,EAAAC,EAAAC,cAAA,MAAIY,UAAU,eACTC,OAAOC,KAAKZ,KAAKZ,MAAMyB,QAAQC,IAAI,SAAAC,GAAI,OACpCnB,EAAAC,EAAAC,cAACkB,EAAD,CACI3B,YAAaF,EAAKC,MAAMyB,OAAOE,GAC/BE,IAAKF,gBAXZR,aCyCVW,6MAxCXC,KAAO,WACAhC,EAAKC,MAAMgC,YACVjC,EAAKC,MAAMgC,gBAInBC,WAAa,WACT,GAAGlC,EAAKC,MAAMkC,OAAOC,OAAO,EACxB,OAEI3B,EAAAC,EAAAC,cAAA,OAAKY,UAAU,gBACXd,EAAAC,EAAAC,cAAA,UACKa,OAAOC,KAAKzB,EAAKC,MAAMkC,QAAQR,IAAI,SAAAC,GAAI,OACpCnB,EAAAC,EAAAC,cAAA,MAAImB,IAAKF,GACLnB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAE,SAAAC,OAAWhB,EAAKC,MAAMkC,OAAOP,GAAMX,WAAnC,KAAAD,OAAiDhB,EAAKC,MAAMkC,OAAOP,GAAMV,IAAMK,UAAU,oBAAoBc,QAASrC,EAAKgC,MAC9HhC,EAAKC,MAAMkC,OAAOP,GAAMT,KACzBV,EAAAC,EAAAC,cAAA,YAAOX,EAAKC,MAAMkC,OAAOP,GAAMX,2FAe3D,OACIR,EAAAC,EAAAC,cAACF,EAAAC,EAAMY,SAAP,KACKT,KAAKqB,qBAnCWd,aC8BlBkB,6MA3BXC,WAAaC,IAAMC,cAGnBC,WAAa,WACT,IAAMC,EAAU3C,EAAKuC,WAAWK,QAAQC,MAEpC7C,EAAKC,MAAMyC,WAAWC,4EAO1B,OACIlC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,oBACXd,EAAAC,EAAAC,cAAA,SAAOmC,SAAUjC,KAAK6B,WAAYK,IAAMlC,KAAK0B,WAAYS,KAAK,OAAOzB,UAAU,SAAS0B,YAAY,mBACpGxC,EAAAC,EAAAC,cAACuC,EAAD,CACIf,OAAUtB,KAAKZ,MAAMkD,aACrBlB,WAAcpB,KAAKZ,MAAMgC,qBApBxBb,aCsDNgC,6MAlDXlB,WAAa,WACT,OAAgC,IAA7BlC,EAAKC,MAAMyB,OAAOU,OAEjB3B,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACfd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBAOnBd,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,QACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,aAAd,MAA6Bd,EAAAC,EAAAC,cAAA,qBAC7BF,EAAAC,EAAAC,cAAC0C,EAAD,CACIX,WAAc1C,EAAKC,MAAMyC,WACzBS,aAAgBnD,EAAKC,MAAMkD,iBAIvC1C,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAC2C,EAAD,CACI5B,OAAU1B,EAAKC,MAAMyB,oFAcrC,OACIjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMY,SAAP,KACKT,KAAKqB,qBA7CHd,aCqFJmC,6MAhFXC,WAAa,WACSC,SAASC,cAAc,4BAC/BC,UAAUC,IAAI,QACNH,SAASC,cAAc,eAC/BC,UAAUC,IAAI,QACPH,SAASC,cAAc,cAC/BC,UAAUC,IAAI,WAG3B3B,WAAa,WACSwB,SAASC,cAAc,4BAC/BC,UAAUE,OAAO,QACTJ,SAASC,cAAc,eAC/BC,UAAUE,OAAO,QACVJ,SAASC,cAAc,cAC/BC,UAAUE,OAAO,iFAK1B,OACIpD,EAAAC,EAAAC,cAACF,EAAAC,EAAMY,SAAP,KACAb,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,oBACXd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,eACVd,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAE,KAAR,MACON,EAAAC,EAAAC,cAAA,sBAGXF,EAAAC,EAAAC,cAAC0C,EAAD,CACIX,WAAY7B,KAAKZ,MAAMyC,WACvBS,aAAetC,KAAKZ,MAAMkD,eAE9B1C,EAAAC,EAAAC,cAAA,OAAKY,UAAU,yBACXd,EAAAC,EAAAC,cAAA,OAAK0B,QAASxB,KAAK2C,WAAYjC,UAAU,aAAauC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,aAAaC,QAAQ,MACxIC,MAAM,OACoBzD,EAAAC,EAAAC,cAAA,QAAOwD,EAAE,gRAezB1D,EAAAC,EAAAC,cAAA,OAAKY,UAAU,2BACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,sBACXd,EAAAC,EAAAC,cAAA,OAAK0B,QAASxB,KAAKoB,WAAYV,UAAU,YAAYuC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,aAAaC,QAAQ,MAC7HC,MAAM,OACczD,EAAAC,EAAAC,cAAA,QAAMwD,EAAE,ybAShB1D,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBACXd,EAAAC,EAAAC,cAAC0C,EAAD,CACIX,WAAY7B,KAAKZ,MAAMyC,WACvBS,aAAetC,KAAKZ,MAAMkD,aAC1BlB,WAAcpB,KAAKoB,uBAxEtBb,qBCwENgD,mLAzEP,OACI3D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC0D,EAAA,KAAD,CACAC,YAAY,SACZvD,GAAG,WACHwD,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANV,kBAWJjE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC0D,EAAA,KAAD,CACAC,YAAY,SACZvD,GAAG,aACHwD,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANV,eAWJjE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC0D,EAAA,KAAD,CACAC,YAAY,SACZvD,GAAG,MACHwD,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANV,QAWJjE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC0D,EAAA,KAAD,CACAC,YAAY,SACZvD,GAAG,UACHwD,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANV,YAWJjE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAC0D,EAAA,KAAD,CACAC,YAAY,SACZvD,GAAG,SACHwD,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KANV,2BAtDCtD,aCgFVuD,6MA7DXC,aAAe,SAACC,GACZ,IAAMC,EAAQD,EAAUE,MAAM,KAC1BC,EAAe,GAKnB,OAJAF,EAAMG,QAAQ,SAAAC,GACVF,GAAgBE,EAAU,MAGvBF,KAIXG,UAAY,WACR,OAAGnF,EAAKC,MAAMmF,KAAKjF,OAAO,GAElBM,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aAAa8D,IAAKrF,EAAKC,MAAMmF,KAAKjF,OAAO,GAAGE,MAAMiF,SAAS/E,IAAKgF,IAAKvF,EAAKC,MAAMmF,KAAKjF,OAAO,GAAGqF,UAI9G/E,EAAAC,EAAAC,cAAA,OAAKY,UAAU,aAAa8D,IAAI,uBAAuBE,IAAI,iBAOvEE,YAAc,WAEV,QAA+BC,IAA5B1F,EAAKC,MAAMmF,KAAKO,cAA2DD,IAAlC1F,EAAKC,MAAMmF,KAAKO,QAAQC,MAEhE,OACInF,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAA,MAAIY,UAAU,aAAavB,EAAKC,MAAMmF,KAAKjE,MAC3CV,EAAAC,EAAAC,cAAA,MAAIY,UAAU,WAAWvB,EAAK4E,aAAa5E,EAAKC,MAAMmF,KAAKnE,aAC1DjB,EAAKmF,YACN1E,EAAAC,EAAAC,cAAA,SAAIX,EAAKC,MAAMmF,KAAKS,iFAmBhC,OACIpF,EAAAC,EAAAC,cAACF,EAAAC,EAAMY,SAAP,KACKT,KAAK4E,sBA3ECrE,aCmDR0E,6MAjDXC,SAAW,SAACC,GAER,OAAGhG,EAAKC,MAAMgG,iBAAiBD,GAAK7F,OAAO,GAEvC,CACIC,gBAAiB,OAASJ,EAAKC,MAAMgG,iBAAiBD,GAAK7F,OAAO,GAAGE,MAAMC,OAAOC,IAAM,KAKxF,CACIC,WAAY,iFAoBnB,IAAA0F,EAAArF,KACL,OACIJ,EAAAC,EAAAC,cAAA,WAASO,GAAG,YACRT,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,MAAIY,UAAU,oBACTC,OAAOC,KAAKZ,KAAKZ,MAAMgG,kBAAkBtE,IAAI,SAAAqE,GAAG,OAC7CvF,EAAAC,EAAAC,cAAA,MAAImB,IAAKkE,GACLvF,EAAAC,EAAAC,cAAA,OAAKC,MAAQsF,EAAKH,SAASC,KAC3BvF,EAAAC,EAAAC,cAAA,UAAKuF,EAAKjG,MAAMgG,iBAAiBD,GAAK7E,kBAzC3CC,qBCCjB+E,EAAMC,YAAc,CACtBC,YAAa,mGA8BFC,mLAtBF,IAAAC,EACyB1F,KAAKZ,MAAMuG,YAAlCC,EADFF,EACEE,SAAUC,EADZH,EACYG,UACjB,OACIjG,EAAAC,EAAAC,cAAA,WAASO,GAAG,OACRT,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBACfd,EAAAC,EAAAC,cAACwF,EAAD,CACIvF,MAAM,oCACN+F,OAAQ,CAACD,EAAWD,GACpBG,KAAQ,CAAC,IACTC,eAAgB,CACZ9C,OAAQ,QACRD,MAAO,mBAjBJ1C,aCGZ0F,EARA,WACX,OACIrG,EAAAC,EAAAC,cAAA,gBCyCOoG,6MA9BX7E,WAAa,WACT,QAA6BwD,IAA1B1F,EAAKC,MAAM+G,WACV,OACIvG,EAAAC,EAAAC,cAAA,MAAIY,UAAU,cACTC,OAAOC,KAAKzB,EAAKC,MAAM+G,YAAYrF,IAAI,SAAAsF,GAAQ,OAC5CxG,EAAAC,EAAAC,cAAA,MAAImB,IAAKmF,GACLxG,EAAAC,EAAAC,cAAA,UAAKX,EAAKC,MAAM+G,WAAWC,GAAU9F,MACrCV,EAAAC,EAAAC,cAAA,SAAIX,EAAKC,MAAM+G,WAAWC,GAAUC,sFAaxD,OACIzG,EAAAC,EAAAC,cAAA,WAASO,GAAG,cACRT,EAAAC,EAAAC,cAAA,wBACCE,KAAKqB,qBApCGd,aCmFV+F,6MAhFXC,YAAc,SAACC,GACX,IACIC,EADExC,EAAQuC,EAAKtC,MAAM,KAEzB,OAAOD,EAAM,IACT,IAAK,KACDwC,EAAM,MACN,MACJ,IAAK,KACDA,EAAM,MACN,MACJ,IAAK,KACDA,EAAM,MACN,MACJ,IAAK,KACDA,EAAM,MACN,MACJ,IAAK,KACDA,EAAM,MACN,MACJ,IAAK,KACDA,EAAM,MACN,MACJ,IAAK,KACDA,EAAM,MACN,MACJ,IAAK,KACDA,EAAM,MACN,MACJ,IAAK,KACDA,EAAM,MACN,MACJ,IAAK,KACDA,EAAM,MACN,MACJ,IAAK,KACDA,EAAM,MACN,MACJ,IAAK,KACDA,EAAM,MACN,MACJ,QACIA,EAAM,IAId,MADY,GAAAtG,OAAM8D,EAAM,GAAZ,KAAA9D,OAAkBsG,MAIlCpF,WAAa,WACT,QAA0BwD,IAAvB1F,EAAKC,MAAMsH,QACV,OACI9G,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACXd,EAAAC,EAAAC,cAAA,MAAIY,UAAU,WACTC,OAAOC,KAAKzB,EAAKC,MAAMsH,SAAS5F,IAAI,SAAA6F,GAAG,OACpC/G,EAAAC,EAAAC,cAAA,MAAImB,IAAK0F,GACL/G,EAAAC,EAAAC,cAAA,KAAGY,UAAU,QAAQvB,EAAKoH,YAAYpH,EAAKC,MAAMsH,QAAQC,GAAKH,OAC9D5G,EAAAC,EAAAC,cAAA,OAAK0E,IAAKrF,EAAKC,MAAMsH,QAAQC,GAAKA,IAAIC,UAAUC,KAAMnC,IAAI,iBAC1D9E,EAAAC,EAAAC,cAAA,KAAGY,UAAU,WAAWvB,EAAKC,MAAMsH,QAAQC,GAAKA,IAAIG,UAAUC,QAAQ,GAAtE,yFAaxB,OACInH,EAAAC,EAAAC,cAAA,WAASO,GAAG,WACRT,EAAAC,EAAAC,cAAA,qBACCE,KAAKqB,qBA5EAd,aCuQPyG,6MAvPXC,SAAW,qCACXvH,IAAI,0CACJwH,iDAA4C/H,EAAK8H,YAEjDE,MAAQ,CACJ5C,KAAK,GACLa,iBAAiB,GACjBe,WAAW,GACXiB,aAAa,GACbV,QAAQ,GACRW,aAAa,KAiCjBC,QAAU,SAACjH,EAAID,GAEXjB,EAAKoI,QAAQlH,GACblB,EAAKqI,cAAcnH,GACnBlB,EAAKsI,oBAAoBpH,GACzBlB,EAAKuI,gBAAgBrH,EAAID,MAO7BmH,8CAAU,SAAAI,EAAOtH,GAAP,IAAAX,EAAAkI,EAAA,OAAAC,EAAAhI,EAAAiI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEAvI,EAFA,GAAAS,OAEShB,EAAKO,IAFd,qBAAAS,OAEqCE,EAFrC,eAIAuH,EAAU,CACZM,oBAAqB,WACrBC,kBAAmBhJ,EAAK8H,UANtBc,EAAAE,KAAA,EASAG,IAAMC,IAAI3I,EAAK,CAACkI,YACjBU,KAAK,SAAAC,GACFpJ,EAAKqJ,SAAS,CACVjE,KAAOgE,EAAUE,KAAKC,QAAQ,GAC9BrB,aAAclI,EAAKgI,MAAME,aAAe,IAE5ClI,EAAKwJ,WAAWJ,EAAUE,KAAKC,QAAQ,GAAG/C,YAAYC,SAAU2C,EAAUE,KAAKC,QAAQ,GAAG/C,YAAYE,aAEzG+C,MAAM,SAAAC,GACHC,QAAQC,IAAIF,KAlBd,wBAAAd,EAAAiB,SAAArB,8DAyBVF,0DAAsB,SAAAwB,EAAO5I,GAAP,IAAAX,EAAAkI,EAAA,OAAAC,EAAAhI,EAAAiI,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAEZvI,EAFY,GAAAS,OAEHhB,EAAKO,IAFF,yBAAAS,OAE6BE,EAF7B,8DAIZuH,EAAU,CACZM,oBAAqB,WACrBC,kBAAmBhJ,EAAK8H,UANViC,EAAAjB,KAAA,EASZG,IAAMC,IAAI3I,EAAK,CAACkI,YACjBU,KAAK,SAAAC,GACFpJ,EAAKqJ,SAAS,CACVpD,iBAAmBmD,EAAUE,KAAKC,QAClCrB,aAAclI,EAAKgI,MAAME,aAAe,MAG/CuB,MAAM,SAAAC,GACHC,QAAQC,IAAIF,KAjBF,wBAAAK,EAAAF,SAAAC,8DAuBtBzB,oDAAe,SAAA2B,EAAO9I,GAAP,IAAAX,EAAAkI,EAAA,OAAAC,EAAAhI,EAAAiI,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAELvI,EAFK,GAAAS,OAEIhB,EAAKO,IAFT,yBAAAS,OAEoCE,EAFpC,qEAILuH,EAAU,CACZM,oBAAqB,WACrBC,kBAAmBhJ,EAAK8H,UANjBmC,EAAAnB,KAAA,EASLG,IAAMC,IAAI3I,EAAK,CAACkI,YACjBU,KAAK,SAAAC,GACFpJ,EAAKqJ,SAAS,CACVrC,WAAaoC,EAAUE,KAAKC,QAC5BrB,aAAclI,EAAKgI,MAAME,aAAe,MAG/CuB,MAAM,SAAAC,GACHC,QAAQC,IAAIF,KAjBT,wBAAAO,EAAAJ,SAAAG,8DAqBfzB,sDAAkB,SAAA2B,EAAOC,EAAQtF,GAAf,IAAAtE,EAAAkI,EAAA,OAAAC,EAAAhI,EAAAiI,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,cAERvI,EAFQ,GAAAS,OAEChB,EAAKO,IAFN,0BAAAS,OAEkC6D,EAFlC,kBAAA7D,OAE4DmJ,EAF5D,wEAIR1B,EAAU,CACZM,oBAAqB,WACrBC,kBAAmBhJ,EAAK8H,UANdsC,EAAAtB,KAAA,EASRG,IAAMC,IAAI3I,EAAK,CAACkI,YACjBU,KAAK,SAAAC,GACFpJ,EAAKqJ,SAAS,CACVpB,aAAemB,EAAUE,KAAKC,QAC9BrB,aAAclI,EAAKgI,MAAME,aAAe,MAG/CuB,MAAM,SAAAC,GACHC,QAAQC,IAAIF,KAjBN,wBAAAU,EAAAP,SAAAK,gEAuBlBV,iDAAa,SAAAa,EAAO5D,EAAUC,GAAjB,IAAAnG,EAAAkI,EAAA,OAAAC,EAAAhI,EAAAiI,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cACHvI,EADG,gFAAAS,OACmFyF,EADnF,KAAAzF,OAC+F0F,EAD/F,WAEH+B,EAAU,CACZ8B,OAAU,MACVC,eAAgB,oDAJXF,EAAAxB,KAAA,EAQHG,IAAMC,IAAI3I,EAAI,CAACkI,YACpBU,KAAK,SAAAC,GACFpJ,EAAKqJ,SAAS,CACV9B,QAAU6B,EAAUE,KAAKmB,SACzBvC,aAAclI,EAAKgI,MAAME,aAAe,IAE5CyB,QAAQC,IAAIR,EAAUE,KAAKmB,YAE9BhB,MAAM,SAAAC,GACHC,QAAQC,IAAIF,KAjBP,wBAAAY,EAAAT,SAAAQ,gEAyBbnI,WAAY,WACR,OAA6B,IAA1BlC,EAAKgI,MAAME,aAEVzH,EAAAC,EAAAC,cAAA,OAAKY,UAAU,qBACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACfd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,0BAMOmE,IAA1B1F,EAAKgI,MAAMhB,iBAAwDtB,IAA5B1F,EAAKgI,MAAMC,mBAA8DvC,IAAhC1F,EAAKgI,MAAM/B,uBAAsDP,IAApB1F,EAAKgI,MAAM5C,KAEpI3E,EAAAC,EAAAC,cAACF,EAAAC,EAAMY,SAAP,KACIb,EAAAC,EAAAC,cAAC+J,EAAD,CACIhI,WAAY1C,EAAKC,MAAMyC,WACvBS,aAAenD,EAAKC,MAAMkD,eAE9B1C,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBAEXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,iBACXd,EAAAC,EAAAC,cAACgK,EAAD,OAGJlK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiK,EAAD,CACIxF,KAAQpF,EAAKgI,MAAM5C,OAEvB3E,EAAAC,EAAAC,cAACkK,EAAD,CACI5E,iBAAmBjG,EAAKgI,MAAM/B,mBAElCxF,EAAAC,EAAAC,cAACmK,EAAD,CACI9D,WAAchH,EAAKgI,MAAMhB,aAI7BvG,EAAAC,EAAAC,cAACoK,EAAD,CACIvE,YAAexG,EAAKgI,MAAM5C,KAAKoB,cAEnC/F,EAAAC,EAAAC,cAACqK,EAAD,CACIzD,QAAWvH,EAAKgI,MAAMT,QAAQ0D,cAElCxK,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC2C,EAAD,CACI5B,OAAU1B,EAAKgI,MAAMC,kBAMrCxH,EAAAC,EAAAC,cAACuK,EAAD,YAxCZ,sFA1KJrK,KAAKZ,MAAMkL,oBACXtK,KAAKsH,QAAQtH,KAAKZ,MAAMiB,GAAIL,KAAKZ,MAAMgB,0DAGrBmK,GAClB,OAAGvK,KAAKZ,MAAMoL,SAASC,WAAaF,EAAUC,SAASC,WACnD3B,QAAQC,IAAI/I,KAAKZ,MAAMoL,SAASC,UAChC3B,QAAQC,IAAIwB,EAAUC,SAASC,UAC/BzK,KAAKwI,SAAS,CACVjE,KAAK,GACLa,iBAAiB,GACjBe,WAAW,GACXiB,aAAa,GACbC,aAAa,IAEjBrH,KAAKZ,MAAMkL,oBACXI,gBAAOC,cAEP3K,KAAKsH,QAAQiD,EAAUlK,GAAIkK,EAAUnK,aAE9B,oCA6MX,OACIR,EAAAC,EAAAC,cAACF,EAAAC,EAAMY,SAAP,KACKT,KAAKqB,qBAnPGd,aC8GVqK,6MAnHX3D,SAAW,qCACXvH,IAAI,0CACJwH,iDAA4C/H,EAAK8H,YAEjDE,MAAQ,CACJ0D,aAAc,GACdC,cAAc,MASlBC,sCAAmB,SAAApD,IAAA,IAAAjI,EAAAkI,EAAA,OAAAC,EAAAhI,EAAAiI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTvI,EADS,GAAAS,OACAhB,EAAKO,IADL,iHAGTkI,EAAU,CACZM,oBAAqB,WACrBC,kBAAmBhJ,EAAK8H,UALbc,EAAAE,KAAA,EAOTG,IAAMC,IAAI3I,EAAK,CAACkI,YACjBU,KAAK,SAAAC,GACFpJ,EAAKqJ,SAAS,CACVsC,cAAgBvC,EAAUE,KAAKC,YAGtCE,MAAM,SAAAC,GACHC,QAAQC,IAAIF,KAdL,wBAAAd,EAAAiB,SAAArB,QAkBnB9F,iDAAa,SAAAoH,EAAOnH,GAAP,IAAApC,EAAAkI,EAAA,OAAAC,EAAAhI,EAAAiI,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cACHvI,EADG,GAAAS,OACMhB,EAAKO,IADX,mDAAAS,OACgE2B,EADhE,4EAGH8F,EAAU,CACZM,oBAAqB,WACrBC,kBAAmBhJ,EAAK8H,UAGR,IAAjBnF,EAAQP,QACPpC,EAAKqJ,SAAS,CACVqC,aAAe,KAVd3B,EAAAjB,KAAA,EAcHG,IAAMC,IAAI3I,EAAK,CAACkI,YACjBU,KAAK,SAAAC,GACFpJ,EAAKqJ,SAAS,CACVqC,aAAetC,EAAUE,KAAKC,YAGrCE,MAAM,SAAAC,GACHC,QAAQC,IAAIF,KArBX,wBAAAK,EAAAF,SAAAC,8DAyBbqB,kBAAoB,WAChBnL,EAAKqJ,SAAS,CACVqC,aAAc,yFAlDlB7K,KAAK+K,oDAwDA,IAAA1F,EAAArF,KACL,OACIJ,EAAAC,EAAAC,cAACkL,EAAA,EAAD,KACIpL,EAAAC,EAAAC,cAACF,EAAAC,EAAMY,SAAP,KAEAb,EAAAC,EAAAC,cAACmL,EAAA,EAAD,KACIrL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBACfzL,EAAAC,EAAAC,cAACwL,EAAD,CACKzK,OAAQwE,EAAK8B,MAAM2D,cACnBjJ,WAAYwD,EAAKxD,WACjBS,aAAe+C,EAAK8B,MAAM0D,kBAI9CjL,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,2BAA2BC,OAAS,SAACjM,GAG3C,IAAImM,EAAWnM,EAAMoL,SAASC,SAASvG,MAAM,KAG7C,OACItE,EAAAC,EAAAC,cAAC0L,EAAD,CACInL,GAAMkL,EAAS,GACfnL,WAAcmL,EAAS,GACvBf,SAAYpL,EAAMoL,SAClB3I,WAAYwD,EAAKxD,WACjBS,aAAe+C,EAAK8B,MAAM0D,aAC1BP,kBAAqBjF,EAAKiF,uBAO9C1K,EAAAC,EAAAC,cAACoL,EAAA,EAAD,CAAOG,OAAS,kBAAMzL,EAAAC,EAAAC,cAAA,oCAtGrBS,aCENkL,mLANX,OACE7L,EAAAC,EAAAC,cAAC4L,EAAD,aAHYnL,aCElBoL,IAASN,OAAOzL,EAAAC,EAAAC,cAAC8L,EAAD,MAAShJ,SAASiJ,eAAe","file":"static/js/main.f15f6179.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\n\nclass City extends Component {\n    liStyle = () => {\n\n        if(this.props.informacion.images[0]){\n        return(\n            {\n                backgroundImage: 'url(' + this.props.informacion.images[0].sizes.medium.url + ')'\n            }            \n        )\n        }else{\n            return(\n                {\n                    background: '#CCC',\n                }            \n            )\n\n        }\n    };\n\n    render() { \n        return (\n            <li style= {this.liStyle()}> \n                <Link to={`/city/${this.props.informacion.country_id}/${this.props.informacion.id}`}>\n                </Link> \n                <h3>{this.props.informacion.name}</h3>\n            </li>\n            \n         );\n    }\n}\n \nexport default City;","import React, { Component } from 'react';\nimport City from './City';\n\nclass ListCities extends Component {\n\n    render() { \n\n        return ( \n            <React.Fragment>\n                <div className=\"list-container\" id=\"nearby\">\n                    <ul className=\"list-cities\" >\n                        {Object.keys(this.props.cities).map(city => (\n                            <City\n                                informacion={this.props.cities[city]}\n                                key={city}\n                            />\n                        )) }\n                    </ul>\n\n                </div>\n            \n            </React.Fragment>\n         );\n    }\n}\n \nexport default ListCities;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nclass SearchAutoComplete extends Component {\n\n    hide = () =>{\n        if(this.props.hideSearch){\n            this.props.hideSearch();\n        }\n    }\n\n    showResult = () => {\n        if(this.props.result.length>0){\n            return(\n            \n                <div className=\"autocomplete\">\n                    <ul>                    \n                        {Object.keys(this.props.result).map(city => (\n                            <li key={city}>\n                                <Link to={`/city/${this.props.result[city].country_id}/${this.props.result[city].id}`} className=\"autocomplete-link\" onClick={this.hide}>\n                                    {this.props.result[city].name}\n                                    <span>{this.props.result[city].country_id}</span>\n                                 </Link>\n                            </li>\n                        )) }\n                    </ul>\n    \n                </div>\n            )\n        }\n       \n\n    }\n\n\n    render() { \n        return ( \n            <React.Fragment>\n                {this.showResult()}\n            </React.Fragment>\n\n         );\n    }\n}\n \nexport default SearchAutoComplete;","import React, { Component } from 'react';\nimport SearchAutoComplete from './SearchAutoComplete';\n\nclass Search extends Component {\n\n    terminoRef = React.createRef();\n\n\n    searchCity = () =>{\n        const termino = this.terminoRef.current.value;\n        //if(termino.length > 2){\n            this.props.searchCity(termino);\n        //}\n    }\n    \n   \n\n    render() { \n        return (\n            <div className=\"search-container\">\n                <input onChange={this.searchCity} ref= {this.terminoRef} type=\"text\" className=\"search\" placeholder='e.g. Barcelona'/>\n                <SearchAutoComplete\n                    result = {this.props.autoComplete}\n                    hideSearch = {this.props.hideSearch}\n                />\n                \n            </div>\n\n         );\n    }\n}\n \nexport default Search;","import React, { Component } from 'react';\nimport ListCities from './ListCities';\nimport Search from './Search';\n\nclass Home extends Component {\n\n\n    showResult = () =>{\n        if(this.props.cities.length === 0){\n            return(\n            <div className=\"spinner-container\">\n                <div className=\"spinner\">\n                    <div className=\"double-bounce1\"></div>\n                    <div className=\"double-bounce2\"></div>\n                </div>\n\n            </div>\n            ) \n        }else{\n            return(\n                <section>\n                <div className=\"home\">\n                    <div className=\"wrapper\">\n                        <h1 className=\"home-logo\">CIT<span>INFO</span></h1>\n                        <Search\n                            searchCity = {this.props.searchCity}\n                            autoComplete = {this.props.autoComplete}\n                        />\n                    </div>\n                </div>\n                <div className=\"wrapper\">\n                    <h2>POPULAR</h2>\n                    <ListCities\n                        cities = {this.props.cities}\n                    />\n\n                </div>\n\n            </section>\n\n            )\n            \n\n        }\n\n    }\n    render() { \n        return (\n            <React.Fragment>\n                {this.showResult()}\n            </React.Fragment>\n            \n            \n         );\n    }\n}\n \nexport default Home;","\nimport React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nimport Search from './Search';\n\n\nclass Header extends Component {\n\n\n    showSearch = () =>{\n        const container = document.querySelector('.search-mobile-container');\n        container.classList.add('flex');\n        const searchbtn = document.querySelector('.search-btn');\n        searchbtn.classList.add('hide');\n        const closebtn = document.querySelector('.close-btn');\n        closebtn.classList.add('show');\n    }\n\n    hideSearch = () =>{\n        const container = document.querySelector('.search-mobile-container');\n        container.classList.remove('flex');\n        const searchbtn = document.querySelector('.search-btn');\n        searchbtn.classList.remove('hide');\n        const closebtn = document.querySelector('.close-btn');\n        closebtn.classList.remove('show');\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>            \n            <header>\n                <div className=\"wrapper\">\n                    <div className=\"header-container\">\n                        <h1 className=\"header-logo\">\n                            <Link to={`/`}>\n                                CIT<span>INFO</span>\n                            </Link>\n                        </h1>\n                        <Search\n                            searchCity={this.props.searchCity}\n                            autoComplete= {this.props.autoComplete}\n                        />\n                        <div className=\"search-mobile-trigger\" >\n                            <svg onClick={this.showSearch} className=\"search-btn\" width=\"50px\" height=\"50px\" viewBox=\"0 0 50 100\" version=\"1.1\" \n  xmlns=\"...\">\n                            <path  d=\"M55.1,51.9L41.6,37.8C45.1,33.6,47,28.4,47,23C47,10.3,36.7,0,24,0S1,10.3,1,23s10.3,23,23,23\n\tc4.8,0,9.3-1.4,13.2-4.2L50.8,56c0.6,0.6,1.3,0.9,2.2,0.9c0.8,0,1.5-0.3,2.1-0.8C56.3,55,56.3,53.1,55.1,51.9z M24,6\n\tc9.4,0,17,7.6,17,17s-7.6,17-17,17S7,32.4,7,23S14.6,6,24,6z\"/>\n\n\n                            </svg>\n                                                      \n\n                        </div>\n                    </div>\n                                  \n                </div>\n                \n            </header>\n\n            <div className=\"search-mobile-container\">\n                <div className=\"closebtn-container\">\n                    <svg onClick={this.hideSearch} className=\"close-btn\" width=\"50px\" height=\"50px\" viewBox=\"0 0 50 100\" version=\"1.1\" \n    xmlns=\"...\">\n                        <path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\n            c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\n            C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\n            s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\"/>\n\n                    </svg>\n\n                </div>\n                \n                <div className=\"search-mobile\">\n                    <Search\n                        searchCity={this.props.searchCity}\n                        autoComplete= {this.props.autoComplete}\n                        hideSearch = {this.hideSearch}\n                    />\n                </div>  \n\n            </div>\n            </React.Fragment>\n                \n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Link } from \"react-scroll\";\n\nclass Navegation extends Component {\n    render() { \n        return (\n            <nav>\n                <ul>\n                    <li>\n                        <Link\n                        activeClass=\"active\"\n                        to=\"seeAndDo\"\n                        spy={true}\n                        smooth={true}\n                        offset={-70}\n                        duration={500}\n                        >\n                        Places to see\n                        </Link>\n                    </li>\n                    <li>\n                        <Link\n                        activeClass=\"active\"\n                        to=\"activities\"\n                        spy={true}\n                        smooth={true}\n                        offset={-70}\n                        duration={500}\n                        >\n                        Activities\n                        </Link>\n                    </li>\n                    <li>\n                        <Link\n                        activeClass=\"active\"\n                        to=\"map\"\n                        spy={true}\n                        smooth={true}\n                        offset={-70}\n                        duration={500}\n                        >\n                        Map\n                        </Link>\n                    </li>\n                    <li>\n                        <Link\n                        activeClass=\"active\"\n                        to=\"weather\"\n                        spy={true}\n                        smooth={true}\n                        offset={-70}\n                        duration={500}\n                        >\n                        Weather\n                        </Link>\n                    </li>\n                    <li>\n                        <Link\n                        activeClass=\"active\"\n                        to=\"nearby\"\n                        spy={true}\n                        smooth={true}\n                        offset={-70}\n                        duration={500}\n                        >\n                        Nearby cities\n                        </Link>\n                    </li>\n                </ul>\n\n            </nav>\n            \n             \n            \n         );\n    }\n}\n \nexport default Navegation;","import React, { Component } from 'react';\n\nclass InfoCity extends Component {\n\n     \n    /*\n    sections = (section) => {\n        if(section >1 && section<6){\n            if(this.props.info.content.sections[section].title !== 'Understand'){\n                return(                \n                        <article>\n                            <h4>{this.props.info.content.sections[section].title}</h4>\n                            {this.props.info.content.sections[section].body}\n                        </article>    \n                    \n                )\n            }\n        }\n        \n    }\n    */\n\n    fixCountryId = (countryId) =>{\n        const parts = countryId.split('_');\n        let newCountryId = \"\";\n        parts.forEach(element => {\n            newCountryId += element + \" \";\n            \n        });\n        return newCountryId;\n        \n    }\n\n    showImage = () =>{\n        if(this.props.info.images[0]){\n            return(\n                <img className=\"city-photo\" src={this.props.info.images[0].sizes.original.url} alt={this.props.info.images[0].caption}/>\n            )\n        }else{\n            return(\n                <img className=\"city-photo\" src=\"/assets/no-image.png\" alt=\"not found\"/>\n            )\n        }\n    }\n\n    \n    \n    showContent = () =>{\n       \n        if(this.props.info.content !== undefined && this.props.info.content.title !== undefined){\n\n            return(\n                <section>\n                    <h2 className=\"city-name\">{this.props.info.name}</h2>\n                    <h3 className=\"country\">{this.fixCountryId(this.props.info.country_id)}</h3>\n                    {this.showImage()}\n                    <p>{this.props.info.intro}</p>\n                    \n                    \n                </section>            \n            )\n\n            /*{Object.keys(this.props.info.content.sections).map(section =>(\n                        this.sections(section)\n                        \n                        \n                    ))} */\n\n        }\n        \n\n    }\n    render() { \n\n\n        return ( \n            <React.Fragment>\n                {this.showContent()}                \n            </React.Fragment>\n         );\n    }\n}\n \nexport default InfoCity;","import React, { Component } from 'react';\n\nclass SeeAndDo extends Component {\n\n    divStyle = (poi) => {\n\n        if(this.props.pointsOfInterest[poi].images[0]){\n        return(\n            {\n                backgroundImage: 'url(' + this.props.pointsOfInterest[poi].images[0].sizes.medium.url + ')',\n            }            \n        )\n        }else{\n            return(\n                {\n                    background: '#CCC',\n                }            \n            )\n\n        }\n    };\n\n     /*\n    bestFor = (data) => {\n        return(\n            Object.keys(this.props.eatAndDrink[data].best_for).map(poi =>(\n                <p>{this.props.eatAndDrink[data].best_for[poi].name}</p>\n                \n            ))\n        )\n    }\n    */\n\n    \n\n    render() { \n        return ( \n            <section id=\"seeAndDo\">\n                <h2>PLACES TO SEE</h2>\n                <ul className=\"pointsOfInterest\">\n                    {Object.keys(this.props.pointsOfInterest).map(poi =>(\n                        <li key={poi}>\n                            <div style= {this.divStyle(poi)}></div>\n                            <h3>{this.props.pointsOfInterest[poi].name}</h3>\n                        </li>\n                        \n                    ))}\n                </ul>\n            </section>\n         );\n    }\n}\n \nexport default SeeAndDo;","import React, { Component } from 'react';\nimport ReactMapboxGl from \"react-mapbox-gl\";\n\nconst Map = ReactMapboxGl({\n    accessToken: \"pk.eyJ1IjoibWF0ZW9ibGFuY28iLCJhIjoiY2pza2p6MjJrMWp1dDQ0bjVkNGt6aTF0MiJ9.8Az9Ni7-thh-V1rNCRZIAw\"\n  });\n\nclass MapComponent extends Component {\n\n    \n\n    \n    render() { \n        const {latitude, longitude} = this.props.coordinates;\n        return ( \n            <section id=\"map\">\n                <h2>MAP</h2>\n                <div className=\"map-container\">\n                <Map\n                    style='mapbox://styles/mapbox/streets-v9'\n                    center={[longitude, latitude]}\n                    zoom = {[13]}                    \n                    containerStyle={{\n                        height: \"400px\",\n                        width: \"100%\"\n                    }}>\n                </Map>\n\n                </div>\n            </section>\n         );\n    }\n}\n \nexport default MapComponent;","import React from 'react';\n\nconst Footer = () => {\n    return ( \n        <footer>\n            \n        </footer>\n     );\n}\n \nexport default Footer;","import React, { Component } from 'react';\n\nclass Activities extends Component {\n\n     /*\n    bestFor = (data) => {\n        return(\n            Object.keys(this.props.eatAndDrink[data].best_for).map(poi =>(\n                <p>{this.props.eatAndDrink[data].best_for[poi].name}</p>\n                \n            ))\n        )\n    }\n    */\n\n    showResult = () =>{\n        if(this.props.activities !== undefined){\n            return(\n                <ul className=\"activities\">\n                    {Object.keys(this.props.activities).map(activity =>(\n                        <li key={activity}>\n                            <h4>{this.props.activities[activity].name}</h4> \n                            <p>{this.props.activities[activity].snippet}</p> \n                        </li>\n                                       \n                    ))}\n                    \n                </ul>\n            )\n        }\n    }\n\n    \n\n    render() { \n        return ( \n            <section id=\"activities\">\n                <h2>ACTIVITIES</h2>\n                {this.showResult()}\n                \n            </section>\n         );\n    }\n}\n \nexport default Activities;","import React, { Component } from 'react';\n\nclass Weather extends Component {\n\n\n    convertDate = (date) =>{\n        const parts = date.split('-');\n        let month;\n        switch(parts[1]){\n            case \"01\":\n                month='JAN';\n                break;\n            case \"02\":\n                month='FEB';\n                break;\n            case \"03\":\n                month='MAR';\n                break;\n            case \"04\":\n                month='APR';\n                break;\n            case \"05\":\n                month='MAY';\n                break;\n            case \"06\":\n                month='JUN';\n                break;\n            case \"07\":\n                month='JUL';\n                break;\n            case \"08\":\n                month='AUG';\n                break;\n            case \"09\":\n                month='SEP';\n                break;\n            case \"10\":\n                month='OCT';\n                break;\n            case \"11\":\n                month='NOV';\n                break;\n            case \"12\":\n                month='DEC';\n                break;\n            default:\n                month='-';\n        }\n\n        const result = `${parts[2]} ${month}`;\n        return result;\n\n    }\n    showResult = () =>{\n        if(this.props.weather !== undefined){\n            return(\n                <div className=\"weather-container\">\n                    <ul className=\"weather\">                    \n                        {Object.keys(this.props.weather).map(day =>(\n                            <li key={day}>                            \n                                <p className=\"date\">{this.convertDate(this.props.weather[day].date)}</p>\n                                <img src={this.props.weather[day].day.condition.icon} alt=\"weather-icon\"/>\n                                <p className=\"celsius\">{this.props.weather[day].day.avgtemp_c.toFixed(0)} ℃</p>\n                            </li>\n                            \n                                        \n                        ))}                        \n                    </ul>\n                </div>\n            )\n        }\n    }\n\n\n    render() {\n        return (\n            <section id=\"weather\">\n                <h2>WEATHER</h2>\n                {this.showResult()}\n\n            </section>\n        );\n    }\n}\n\nexport default Weather;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Header from './Header';\nimport Navegation from './Navegation';\nimport InfoCity from './InfoCity';\nimport SeeAndDo from './SeeAnDo';\nimport MapComponent from './Map';\nimport ListCities from './ListCities';\nimport Footer from './Footer';\nimport Activities from './Activities';\nimport Weather from './Weather';\nimport { animateScroll as scroll } from \"react-scroll\";\n\n\n\n\nclass SingleCity extends Component {\n\n    apiToken = 'rhzulxn6ub7dvaeaa247hy8986km4y3m';\n    url='https://www.triposo.com/api/20181213/';\n    autentication = `account=IDGSSQVVIU&token=${this.apiToken}`;\n\n    state = {\n        info:[],\n        pointsOfInterest:[],\n        activities:[],\n        nearbyCities:[],\n        weather:[],\n        stateChanges:0\n    }\n\n    componentDidMount(){\n        this.props.emptyAutoComplete();\n        this.getData(this.props.id, this.props.country_id);             \n    }\n\n    shouldComponentUpdate(nextProps){\n        if(this.props.location.pathname !== nextProps.location.pathname ){   \n            console.log(this.props.location.pathname);\n            console.log(nextProps.location.pathname);\n            this.setState({\n                info:[],\n                pointsOfInterest:[],\n                activities:[],\n                nearbyCities:[],\n                stateChanges:0\n            })\n            this.props.emptyAutoComplete();\n            scroll.scrollToTop(); \n\n            this.getData(nextProps.id, nextProps.country_id);\n\n            return true;            \n        }else{\n            return true;\n        }\n        \n        \n    }\n    \n\n    getData = (id, country_id) =>{\n        \n        this.getCity(id);\n        this.getActivities(id);\n        this.getPointsOfInterest(id);\n        this.getNearbyCities(id, country_id);\n          \n\n    }\n\n    \n\n    getCity = async (id) => {\n\n        const url = `${this.url}location.json?id=${id}&fields=all`;\n        \n        const headers = {\n            'X-Triposo-Account': 'GSSQVVIU',\n            'X-Triposo-Token': this.apiToken\n        }\n\n        await axios.get(url, {headers})\n            .then(respuesta => {\n                this.setState({\n                    info : respuesta.data.results[0],\n                    stateChanges: this.state.stateChanges + 1\n                })\n                this.getWeather(respuesta.data.results[0].coordinates.latitude, respuesta.data.results[0].coordinates.longitude)\n            })\n            .catch(error =>{\n                console.log(error);\n            })\n\n\n    }\n\n\n    getPointsOfInterest = async (id) => {\n\n        const url = `${this.url}poi.json?location_id=${id}&fields=images,name,score,snippet&count=12&order_by=-score`;\n        \n        const headers = {\n            'X-Triposo-Account': 'GSSQVVIU',\n            'X-Triposo-Token': this.apiToken\n        }\n\n        await axios.get(url, {headers})\n            .then(respuesta => {\n                this.setState({\n                    pointsOfInterest : respuesta.data.results,\n                    stateChanges: this.state.stateChanges + 1\n                })\n            })\n            .catch(error =>{\n                console.log(error);\n            })\n\n\n    }\n\n    getActivities= async (id) => {\n\n        const url = `${this.url}poi.json?location_id=${id}&tag_labels=do&count=10&fields=score,name,snippet&order_by=-score`;\n        \n        const headers = {\n            'X-Triposo-Account': 'GSSQVVIU',\n            'X-Triposo-Token': this.apiToken\n        }\n\n        await axios.get(url, {headers})\n            .then(respuesta => {\n                this.setState({\n                    activities : respuesta.data.results,\n                    stateChanges: this.state.stateChanges + 1\n                })\n            })\n            .catch(error =>{\n                console.log(error);\n            })\n    }\n\n    getNearbyCities = async (cityId, countryId) => {\n\n        const url = `${this.url}location.json?part_of=${countryId}&also_visited=${cityId}&fields=id,name,images,country_id,score&order_by=-also_visited_score`;\n        \n        const headers = {\n            'X-Triposo-Account': 'GSSQVVIU',\n            'X-Triposo-Token': this.apiToken\n        }\n\n        await axios.get(url, {headers})\n            .then(respuesta => {\n                this.setState({\n                    nearbyCities : respuesta.data.results,\n                    stateChanges: this.state.stateChanges + 1\n                })\n            })\n            .catch(error =>{\n                console.log(error);\n            })\n\n\n    }\n\n    getWeather = async (latitude, longitude) => {\n        const url = `https://api.apixu.com/v1/forecast.json?key=4ca2025811c44d7cb11194042192502&q=${latitude},${longitude}&days=7`;\n        const headers = {\n            'Accept': '*/*',\n            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n           \n\n        }\n        await axios.get(url,{headers})\n        .then(respuesta => {\n            this.setState({\n                weather : respuesta.data.forecast,\n                stateChanges: this.state.stateChanges + 1\n            })\n            console.log(respuesta.data.forecast);\n        })\n        .catch(error =>{\n            console.log(error);\n        })\n\n\n    } \n\n    \n\n    showResult= () =>{\n        if(this.state.stateChanges!==5){\n            return(\n            <div className=\"spinner-container\">\n                <div className=\"spinner\">\n                    <div className=\"double-bounce1\"></div>\n                    <div className=\"double-bounce2\"></div>\n                </div>\n\n            </div>\n            )\n        }else{\n            if (this.state.activities !== undefined && this.state.nearbyCities !== undefined && this.state.pointsOfInterest !== undefined && this.state.info !== undefined){\n                return(\n                    <React.Fragment>\n                        <Header\n                            searchCity={this.props.searchCity}\n                            autoComplete= {this.props.autoComplete}\n                        />\n                        <div className=\"wrapper\">\n                            <div className=\"city-container\">\n    \n                                <div className=\"nav-container\">\n                                    <Navegation/>\n                                </div>\n                                \n                                <div>                        \n                                    <InfoCity\n                                        info = {this.state.info}\n                                    />\n                                    <SeeAndDo\n                                        pointsOfInterest= {this.state.pointsOfInterest}\n                                    />\n                                    <Activities\n                                        activities = {this.state.activities}\n                                    \n                                    />\n                                    \n                                    <MapComponent\n                                        coordinates = {this.state.info.coordinates}\n                                    />\n                                    <Weather\n                                        weather = {this.state.weather.forecastday}\n                                    />\n                                    <h2>NEARBY CITIES</h2>\n                                    <ListCities\n                                        cities = {this.state.nearbyCities}\n                                    /> \n                                    </div>\n                                </div>\n                    \n                        </div>\n                        <Footer/>\n                    </React.Fragment>\n    \n                )\n            }\n\n        }\n\n        \n    }\n\n\n\n\n    render() { \n        return (\n            <React.Fragment>\n                {this.showResult()}\n            </React.Fragment>\n         );\n    }\n}\n \nexport default SingleCity;","import React, { Component } from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport axios from 'axios';\n//Components\nimport Home from './Home';\nimport SingleCity from './SingleCity';\n\n\n\nclass Router extends Component {\n\n    apiToken = 'rhzulxn6ub7dvaeaa247hy8986km4y3m';\n    url='https://www.triposo.com/api/20181213/';\n    autentication = `account=IDGSSQVVIU&token=${this.apiToken}`;\n    \n    state = { \n        searchCities: [],\n        popularCities:[]\n     }\n\n     componentDidMount(){\n        this.getPopularCities();\n    }\n\n    \n\n    getPopularCities = async () => {\n        const url = `${this.url}location.json?&part_of=!Egypt&tag_labels=city&count=10&fields=id,name,images,score,country_id&order_by=-score`;\n        \n        const headers = {\n            'X-Triposo-Account': 'GSSQVVIU',\n            'X-Triposo-Token': this.apiToken\n        }\n        await axios.get(url, {headers})\n            .then(respuesta => {\n                this.setState({\n                    popularCities : respuesta.data.results\n                })\n            })\n            .catch(error =>{\n                console.log(error);\n            })\n    }\n\n    searchCity = async (termino) => {\n        const url = `${this.url}location.json?tag_labels=city&annotate=trigram:${termino}&trigram=>=0.4&count=3&fields=id,name,score,country_id&order_by=-trigram`;\n        \n        const headers = {\n            'X-Triposo-Account': 'GSSQVVIU',\n            'X-Triposo-Token': this.apiToken\n        }\n\n        if(termino.length===0){\n            this.setState({\n                searchCities : []\n            })\n        }\n\n        await axios.get(url, {headers})\n            .then(respuesta => {\n                this.setState({\n                    searchCities : respuesta.data.results\n                })\n            })\n            .catch(error =>{\n                console.log(error);\n            })\n    }\n    \n    emptyAutoComplete = () =>{\n        this.setState({\n            searchCities: []\n        })\n    }\n    \n\n\n    render() { \n        return ( \n            <HashRouter>\n                <React.Fragment>\n\n                <Switch>\n                    <Route exact path=\"/\" render={() => (\n                                   <Home\n                                        cities={this.state.popularCities}\n                                        searchCity={this.searchCity}\n                                        autoComplete= {this.state.searchCities}\n                                   />\n                    ) } />\n\n                    <Route exact path=\"/city/:countryId/:cityId\" render={ (props)=>{\n                                //elimina el string /city/ y se queda solo con el id\n                                //let idCity = props.location.pathname.replace('/city/','');\n                                let infoCity = props.location.pathname.split(\"/\");\n                                \n                                \n                                return(\n                                    <SingleCity \n                                        id = {infoCity[3]}\n                                        country_id = {infoCity[2]}\n                                        location = {props.location}\n                                        searchCity={this.searchCity}\n                                        autoComplete= {this.state.searchCities}\n                                        emptyAutoComplete = {this.emptyAutoComplete}\n\n                                    />\n                                )\n                            }}\n\n                    />\n                    <Route render={ () => <h2>404 Error</h2> } />\n\n                </Switch>\n                \n                </React.Fragment>\n\n                \n            \n            </HashRouter>\n            \n\n         );\n    }\n}\n \nexport default Router;","import React, { Component } from 'react';\nimport Router from './Router';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router/>      \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}